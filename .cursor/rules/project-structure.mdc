---
description: whenever you need description of the structure of the project, what purpose each folder on the root level does, you can use this description
globs: 
alwaysApply: false
---
---
description: defines the structure of this project
---

This is a turborepo project with the following applications:

- frontend: built with remix run
- backend built with NestJS
- CMS built with Keystone
- shared packages are inside packages folder.
  - db shared package controls database schema for the app funcitonality, not including the CMS

The frontend and backend use the same database, defined in in the root directory /packages/db, where the schema is defined [schema.ts](mdc:packages/db/src/schema/schema.ts)

the db is shared, hence whenever the frontend/backend need to access the database, or type definitions which are used both by the database and the frontend and the backend, they all reference the packages/db folder

The front endhandlesthe marketing websiteplus the users dashboard and most of the functionalities. The back end is used in the same sense one would use serverless functions. It's only to provide an apifor long duration tasks that need to be run without affecting the functionality of the front end.

The application has mainly two roles of users: Freelancers and Employers.

Employers can create their account and createa companyand then they create jobs with skill requirements.

Freelancers also create their accounts and portfolios with their list of experiences and then can apply for jobs.
